[core]
	editor = subl

[alias]
    l = !"git --no-pager log -10 --format='tformat:%C(auto,yellow)%h%Creset %C(auto,cyan)%<(14,trunc)%an%Creset  %C(auto,normal)%s%Creset   %C(auto,bold black)%<(16)%ar%Creset %C(auto,green)%D%Creset'"
    lr = !"git --no-pager log -20 --reverse --format='tformat:%C(auto,yellow)%h%Creset %C(auto,cyan)%<(14,trunc)%an%Creset  %C(auto,normal)%s%Creset   %C(auto,bold black)%<(16)%ar%Creset'"
    ll = log --date='format:%d-%m-%Y %H:%m:%S' --name-status --format='format:%C(auto,yellow)%h%Creset  %C(auto,bold black)%ad%Creset  %C(auto,cyan)%<(14,trunc)%an%Creset  %C(auto,normal)%s%Creset'
    lg = log --graph --abbrev-commit --decorate --format='format:%C(auto,yellow)%h%Creset %C(auto,cyan)%<(14,trunc)%an%Creset  %C(auto,normal)%<(40,trunc)%s%Creset %C(auto)%D%Creset'
    s = !"git status -s && git --no-pager log -3 --format='tformat:%C(auto,yellow)%h%Creset %C(auto,cyan)%<(14,trunc)%an%Creset  %C(auto,normal)%s%Creset   %C(auto,bold black)%<(16)%ar%Creset %C(auto,green)%D%Creset'"
    b = "!f() { if [ -z ${1} ]; then git --no-pager branch --sort=-authordate --format='%(align:43)%(color:yellow)%(refname:short) %(color:green)%(if)%(upstream)%(then)%(if:equals==)%(upstream:trackshort)%(then)%(else)%(upstream:trackshort)%(end)%(else)~%(end)%(end) %(align:20)%(color:cyan)%(authorname)%(end) %(align:16)%(color:reset)%(color:normal)%(authordate:relative)%(end) %(color:black bold)%(upstream:short)'; else if [[ ! -z $(git branch --list ${1}) ]]; then git branch -D ${1}; fi; git checkout -b ${1}; fi; }; f"
    br = !"git --no-pager branch -r --sort=-authordate --format='%(align:40)%(color:red)%(refname:short)%(end) %(align:20)%(color:cyan)%(authorname)%(end) %(align:16)%(color:reset)%(color:normal)%(authordate:relative)%(end)'"
    ba = !"git b && echo && git --no-pager branch -r --sort=-authordate --format='%(align:40)%(color:red)%(refname:short)%(end) %(align:20)%(color:cyan)%(authorname)%(end) %(align:16)%(color:reset)%(color:normal)%(authordate:relative)%(end)' --color=always | grep -v '/HEAD' | HEAD -15"
    bd = branch -D
    co = checkout
    c = "!f() { if [[ -z $(git diff --name-only --cached) ]]; then git add -u; fi; git commit -m \"${1}\"; }; f"
    up = !"git pull --rebase && git submodule update"
    sl = !"git status -s && git l"
    cs = !"git submodule foreach git commit -am ${1} && git add -A && git commit -am ${1}"
    issues = "!f() { git log ${1}..HEAD --format=tformat:%s | grep -o '[A-Z][A-Z]*-[0-9][0-9]*' | sort -u | tr '\n' , | sed 's/,/, /g; s/,[[:space:]]*$//'; }; f"

[merge]
    tool = sublimerge

[mergetool "sublimerge"]
    cmd = \"c:\\Program Files\\Sublime Text 3\\subl.exe\" -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\"
    trustExitCode = false
